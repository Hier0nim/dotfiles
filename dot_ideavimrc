" Space as leader key
nnoremap <SPACE> <Nop>
let mapleader=" "

" Options
set	clipboard="unnamedplus"
set	fileencoding="utf-8"
set	hlsearch
set	ignorecase
set	smartcase
set	smartindent
set	splitbelow
set	splitright
set	noswapfile
set	undofile
set	undolevels=10000
set	undoreload=10000
set	expandtab
set	shiftwidth=2
set	tabstop=2
set	softtabstop=2
set	cursorline
set	number
set	relativenumber
set	wrap
set	nolinebreak
set	scrolloff=8
set	sidescrolloff=8
set showmode
set clipboard+=unnamed
set clipboard+=ideaput
set incsearch
set sneak
set quickscope

" Recommanded ideavim settings
set ideajoin
set ideaput
set ideamarks

" Plugins
set surround
set NERDTree
set commentary
set highlightedyank

" Tab navigation keymaps
nmap <A-q> :tabclose<CR>
nmap <Tab> gt
nmap <S-Tab> gT
map <leader>1 <action>(GoToTab1)
map <leader>2 <action>(GoToTab2)
map <leader>3 <action>(GoToTab3)
map <leader>4 <action>(GoToTab4)
map <leader>5 <action>(GoToTab5)
map <leader>6 <action>(GoToTab6)
map <leader>0 <action>(GoToLastTab)

" Window navigation keymaps
nmap <Leader>v :vsplit<CR>
nmap <Leader>h :split<CR>
nmap <C-q> :q<CR>
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Code navigation keymaps
nmap gb <Action>(Back)
nmap gf <Action>(Forward)
nmap gd <Action>(GotoDeclaration)
nmap gu <Action>(FindUsages)
nmap gl <Action>(ShowErrorDescription)

" Other windows access                   
nmap <Leader>e :NERDTreeFocus<CR>
nmap <Leader>E :NERDTreeToggle<CR>
nmap <Leader>s <Action>(FileStructurePopup)
nmap <Leader>ff <Action>(SearchEverywhere)
nmap <Leader>fg <Action>(FindInPath)
nmap <Leader>r :registers<cr>
nmap <Leader>al :actionlist<space>
nmap <Leader>wp <Action>(ActivateProblemsViewToolWindow)
nmap <Leader>wr <Action>(ActivateRunToolWindow)
nmap <Leader>wg <Action>(ActivateVersionControlToolWindow)
nmap <Leader>wc <Action>(ActivateCommitToolWindow)
nmap <Leader>wd <Action>(ActivateDatabaseToolWindowmap <Leader>wn <Action>(ActivateNotificationsToolWindow)
nmap <leader>wt <Action>(ActivateTerminalToolWindow)
nmap <Leader>wnc <Action>(ClearAllNotifications)

" Perform actions in code
nmap <Leader>ca <Action>(ShowIntentionActions)
nmap <Leader>cr <Action>(RenameElement)
nmap <Leader>cf <Action>(ReformatCode)
nmap <Leader>cg <Action>(Generate)
vmap <Leader>cv <Action>(IntroduceVariable)
vmap <Leader>cm <Action>(ExtractMethod)

" Save current file with C-s
nmap <C-s> :w<CR>

" Debug keymaps
nmap <Leader>db <Action>(ToggleLineBreakpoint)
nmap <Leader>de <Action>(EditBreakpoint)

" Tests keymaps
nmap <Leader>rt <Action>(RunClass)
nmap <Leader>dt <Action>(DebugClass)

" Selects all editor content
nnoremap <C-A> gg<S-v>G

" u/U undo/redo rather than u/C-r
nmap U <C-r>

" Keymaps to move lines of code up and down
nmap <S-j> :m .+1<CR>==
nmap <S-k> :m .-2<CR>==
vmap <S-j> :m '>+1<CR>gv=gv
vmap <S-k> :m '<-2<CR>gv=gv

" Stay in visual mode after (un)indenting
vmap < <gv^
vmap > >gv^

" Window appearance
map <leader>vv <Action>(ToggleFullScreen)
map <leader>vf <Action>(ToggleDistractionFreeMode)
map <leader>vp <Action>(TogglePresentationMode)

" Reload .ideavimrc without restarting the IDE
nmap <Leader>ir <Action>(IdeaVim.ReloadVimRc.reload)

" NERDTree keymaps : open/close a node with l/h
let g:NERDTreeMapActivateNode="l"
let g:NERDTreeMapCloseDir="h"

" Harpoon mapping
nnoremap <Leader>a :action AddToHarpoon<CR>
nnoremap <Leader>sh :action ShowHarpoon<CR>
nnoremap <Leader>1 :action GotoHarpoon1<CR>
nnoremap <Leader>2 :action GotoHarpoon2<CR>
nnoremap <Leader>3 :action GotoHarpoon3<CR>
nnoremap <Leader>4 :action GotoHarpoon4<CR>
nnoremap <Leader>5 :action GotoHarpoon5<CR>
nnoremap <Leader>s1 :action SetHarpoon1<CR>
nnoremap <Leader>s2 :action SetHarpoon2<CR>
nnoremap <Leader>s3 :action SetHarpoon3<CR>
nnoremap <Leader>s4 :action SetHarpoon4<CR>
nnoremap <Leader>s5 :action SetHarpoon5<CR>
